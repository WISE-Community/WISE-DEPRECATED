{"version":3,"sources":["animationService.es6"],"names":["AnimationService","$filter","StudentDataService","UtilService","$translate","component","type","widthInPixels","widthInUnits","heightInPixels","heightInUnits","dataXOriginInPixels","dataYOriginInPixels","coordinateSystem","objects","componentStates","componentEvents","nodeEvents","node","length","componentState","componentContent","studentData","ComponentService","$inject"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;IAEMA,gB;;;AACJ,4BAAYC,OAAZ,EAAqBC,kBAArB,EAAyCC,WAAzC,EAAsD;AAAA;;AAAA,+HAC9CF,OAD8C,EACrCC,kBADqC,EACjBC,WADiB;AAErD;;;;4CAEuB;AACtB,aAAO,KAAKC,UAAL,CAAgB,8BAAhB,CAAP;AACD;;;sCAEiB;AAChB,UAAMC,+IAAN;AACAA,gBAAUC,IAAV,GAAiB,WAAjB;AACAD,gBAAUE,aAAV,GAA0B,GAA1B;AACAF,gBAAUG,YAAV,GAAyB,EAAzB;AACAH,gBAAUI,cAAV,GAA2B,GAA3B;AACAJ,gBAAUK,aAAV,GAA0B,EAA1B;AACAL,gBAAUM,mBAAV,GAAgC,CAAhC;AACAN,gBAAUO,mBAAV,GAAgC,EAAhC;AACAP,gBAAUQ,gBAAV,GAA6B,QAA7B;AACAR,gBAAUS,OAAV,GAAoB,EAApB;AACA,aAAOT,SAAP;AACD;;;gCAEWA,S,EAAWU,e,EAAiBC,e,EAAiBC,U,EAAYC,I,EAAM;AACzE,aAAOH,gBAAgBI,MAAhB,GAAyB,CAAhC;AACD;;;iDAE4BC,c,EAAgBC,gB,EAAkB;AAC7D,UAAID,kBAAkB,IAAtB,EAA4B;AAC1B,eAAOA,eAAeE,WAAf,IAA8B,IAArC;AACD;AACD,aAAO,KAAP;AACD;;;;EAhC4BC,0B;;AAmC/BvB,iBAAiBwB,OAAjB,GAA2B,CACzB,SADyB,EAEzB,oBAFyB,EAGzB,aAHyB,CAA3B;;kBAMexB,gB","file":"animationService.js","sourcesContent":["import ComponentService from '../componentService';\n\nclass AnimationService extends ComponentService {\n  constructor($filter, StudentDataService, UtilService) {\n    super($filter, StudentDataService, UtilService);\n  }\n\n  getComponentTypeLabel() {\n    return this.$translate('animation.componentTypeLabel');\n  }\n\n  createComponent() {\n    const component = super.createComponent();\n    component.type = 'Animation';\n    component.widthInPixels = 600;\n    component.widthInUnits = 60;\n    component.heightInPixels = 200;\n    component.heightInUnits = 20;\n    component.dataXOriginInPixels = 0;\n    component.dataYOriginInPixels = 80;\n    component.coordinateSystem = 'screen';\n    component.objects = [];\n    return component;\n  }\n\n  isCompleted(component, componentStates, componentEvents, nodeEvents, node) {\n    return componentStates.length > 0;\n  };\n\n  componentStateHasStudentWork(componentState, componentContent) {\n    if (componentState != null) {\n      return componentState.studentData != null;\n    }\n    return false;\n  }\n}\n\nAnimationService.$inject = [\n  '$filter',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default AnimationService;\n"]}