{"version":3,"sources":["audioOscillatorAuthoringController.es6"],"names":["AudioOscillatorAuthoringController","$filter","$mdDialog","$q","$rootScope","$scope","$timeout","AnnotationService","AudioOscillatorService","ConfigService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","allowedConnectedComponentTypes","type","populateCheckedOscillatorTypes","authoringComponentContent","oscillatorTypes","indexOf","authoringSineChecked","authoringSquareChecked","authoringTriangleChecked","authoringSawtoothChecked","newValue","oldValue","stop","setParametersFromComponentContent","drawOscilloscopeGridAfterTimeout","event","args","isEventTargetThisComponent","assetItem","fileName","fullAssetPath","getFullAssetPath","summernoteId","getSummernoteId","restoreSummernoteCursorPosition","isImage","insertImageIntoSummernote","isVideo","insertVideoIntoSummernote","hide","push","authoringViewComponentChanged","AudioOscillatorController","$inject"],"mappings":"AAAA;;;;;;;;;;AAEA;;;;;;;;;;;;IAEMA,kC;;;AACJ,8CAAYC,OAAZ,EACYC,SADZ,EAEYC,EAFZ,EAGYC,UAHZ,EAIYC,MAJZ,EAKYC,QALZ,EAMYC,iBANZ,EAOYC,sBAPZ,EAQYC,aARZ,EASYC,WATZ,EAUYC,eAVZ,EAWYC,cAXZ,EAYYC,mBAZZ,EAaYC,kBAbZ,EAcYC,WAdZ,EAcyB;AAAA;;AAAA,wKACjBd,OADiB,EAErBC,SAFqB,EAGrBC,EAHqB,EAIrBC,UAJqB,EAKrBC,MALqB,EAMrBC,QANqB,EAOrBC,iBAPqB,EAQrBC,sBARqB,EASrBC,aATqB,EAUrBC,WAVqB,EAWrBC,eAXqB,EAYrBC,cAZqB,EAarBC,mBAbqB,EAcrBC,kBAdqB,EAerBC,WAfqB;;AAiBvB,UAAKC,8BAAL,GAAsC,CACpC,EAAEC,MAAM,iBAAR,EADoC,CAAtC;;AAIA,UAAKC,8BAAL;AArBuB;AAsBxB;;;;qDAEgC;AAC/B,UAAI,KAAKC,yBAAL,CAA+BC,eAA/B,CAA+CC,OAA/C,CAAuD,MAAvD,KAAkE,CAAC,CAAvE,EAA0E;AACxE,aAAKC,oBAAL,GAA4B,IAA5B;AACD;;AAED,UAAI,KAAKH,yBAAL,CAA+BC,eAA/B,CAA+CC,OAA/C,CAAuD,QAAvD,KAAoE,CAAC,CAAzE,EAA4E;AAC1E,aAAKE,sBAAL,GAA8B,IAA9B;AACD;;AAED,UAAI,KAAKJ,yBAAL,CAA+BC,eAA/B,CAA+CC,OAA/C,CAAuD,UAAvD,KAAsE,CAAC,CAA3E,EAA8E;AAC5E,aAAKG,wBAAL,GAAgC,IAAhC;AACD;;AAED,UAAI,KAAKL,yBAAL,CAA+BC,eAA/B,CAA+CC,OAA/C,CAAuD,UAAvD,KAAsE,CAAC,CAA3E,EAA8E;AAC5E,aAAKI,wBAAL,GAAgC,IAAhC;AACD;AACF;;;2DAEsCC,Q,EAAUC,Q,EAAU;AACzD,qMAA6CD,QAA7C,EAAuDC,QAAvD;AACA,WAAKC,IAAL;AACA,WAAKC,iCAAL;AACA,WAAKC,gCAAL;AACD;;;kCAEaC,K,EAAOC,I,EAAM;AACzB,UAAI,KAAKC,0BAAL,CAAgCD,IAAhC,CAAJ,EAA2C;AACzC,YAAME,YAAYF,KAAKE,SAAvB;AACA,YAAMC,WAAWD,UAAUC,QAA3B;AACA,YAAMC,gBAAgB,KAAKC,gBAAL,CAAsBF,QAAtB,CAAtB;AACA,YAAIG,eAAe,KAAKC,eAAL,CAAqBP,IAArB,CAAnB;AACA,aAAKQ,+BAAL,CAAqCF,YAArC;;AAEA,YAAI,KAAKvB,WAAL,CAAiB0B,OAAjB,CAAyBN,QAAzB,CAAJ,EAAwC;AACtC,eAAKO,yBAAL,CAA+BJ,YAA/B,EAA6CF,aAA7C,EAA4DD,QAA5D;AACD,SAFD,MAEO,IAAI,KAAKpB,WAAL,CAAiB4B,OAAjB,CAAyBR,QAAzB,CAAJ,EAAwC;AAC7C,eAAKS,yBAAL,CAA+BN,YAA/B,EAA6CF,aAA7C;AACD;AACF;;AAED,WAAKlC,SAAL,CAAe2C,IAAf;AACD;;;yDAEoC;AACnC,WAAK1B,yBAAL,CAA+BC,eAA/B,GAAiD,EAAjD;;AAEA,UAAI,KAAKE,oBAAT,EAA+B;AAC7B,aAAKH,yBAAL,CAA+BC,eAA/B,CAA+C0B,IAA/C,CAAoD,MAApD;AACD;;AAED,UAAI,KAAKvB,sBAAT,EAAiC;AAC/B,aAAKJ,yBAAL,CAA+BC,eAA/B,CAA+C0B,IAA/C,CAAoD,QAApD;AACD;;AAED,UAAI,KAAKtB,wBAAT,EAAmC;AACjC,aAAKL,yBAAL,CAA+BC,eAA/B,CAA+C0B,IAA/C,CAAoD,UAApD;AACD;;AAED,UAAI,KAAKrB,wBAAT,EAAmC;AACjC,aAAKN,yBAAL,CAA+BC,eAA/B,CAA+C0B,IAA/C,CAAoD,UAApD;AACD;;AAED,WAAKC,6BAAL;AACD;;;;EAtG8CC,mC;;AAyGjDhD,mCAAmCiD,OAAnC,GAA6C,CAC3C,SAD2C,EAE3C,WAF2C,EAG3C,IAH2C,EAI3C,YAJ2C,EAK3C,QAL2C,EAM3C,UAN2C,EAO3C,mBAP2C,EAQ3C,wBAR2C,EAS3C,eAT2C,EAU3C,aAV2C,EAW3C,iBAX2C,EAY3C,gBAZ2C,EAa3C,qBAb2C,EAc3C,oBAd2C,EAe3C,aAf2C,CAA7C;;kBAkBejD,kC","file":"audioOscillatorAuthoringController.js","sourcesContent":["'use strict';\n\nimport AudioOscillatorController from \"./audioOscillatorController\";\n\nclass AudioOscillatorAuthoringController extends AudioOscillatorController {\n  constructor($filter,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $timeout,\n              AnnotationService,\n              AudioOscillatorService,\n              ConfigService,\n              NodeService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $timeout,\n      AnnotationService,\n      AudioOscillatorService,\n      ConfigService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    this.allowedConnectedComponentTypes = [\n      { type: 'AudioOscillator' }\n    ];\n\n    this.populateCheckedOscillatorTypes();\n  }\n\n  populateCheckedOscillatorTypes() {\n    if (this.authoringComponentContent.oscillatorTypes.indexOf('sine') != -1) {\n      this.authoringSineChecked = true;\n    }\n\n    if (this.authoringComponentContent.oscillatorTypes.indexOf('square') != -1) {\n      this.authoringSquareChecked = true;\n    }\n\n    if (this.authoringComponentContent.oscillatorTypes.indexOf('triangle') != -1) {\n      this.authoringTriangleChecked = true;\n    }\n\n    if (this.authoringComponentContent.oscillatorTypes.indexOf('sawtooth') != -1) {\n      this.authoringSawtoothChecked = true;\n    }\n  }\n\n  handleAuthoringComponentContentChanged(newValue, oldValue) {\n    super.handleAuthoringComponentContentChanged(newValue, oldValue);\n    this.stop();\n    this.setParametersFromComponentContent();\n    this.drawOscilloscopeGridAfterTimeout();\n  }\n\n  assetSelected(event, args) {\n    if (this.isEventTargetThisComponent(args)) {\n      const assetItem = args.assetItem;\n      const fileName = assetItem.fileName;\n      const fullAssetPath = this.getFullAssetPath(fileName);\n      let summernoteId = this.getSummernoteId(args);\n      this.restoreSummernoteCursorPosition(summernoteId);\n\n      if (this.UtilService.isImage(fileName)) {\n        this.insertImageIntoSummernote(summernoteId, fullAssetPath, fileName);\n      } else if (this.UtilService.isVideo(fileName)) {\n        this.insertVideoIntoSummernote(summernoteId, fullAssetPath);\n      }\n    }\n\n    this.$mdDialog.hide();\n  }\n\n  authoringViewOscillatorTypeClicked() {\n    this.authoringComponentContent.oscillatorTypes = [];\n\n    if (this.authoringSineChecked) {\n      this.authoringComponentContent.oscillatorTypes.push('sine');\n    }\n\n    if (this.authoringSquareChecked) {\n      this.authoringComponentContent.oscillatorTypes.push('square');\n    }\n\n    if (this.authoringTriangleChecked) {\n      this.authoringComponentContent.oscillatorTypes.push('triangle');\n    }\n\n    if (this.authoringSawtoothChecked) {\n      this.authoringComponentContent.oscillatorTypes.push('sawtooth');\n    }\n\n    this.authoringViewComponentChanged();\n  }\n}\n\nAudioOscillatorAuthoringController.$inject = [\n  '$filter',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$timeout',\n  'AnnotationService',\n  'AudioOscillatorService',\n  'ConfigService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'\n];\n\nexport default AudioOscillatorAuthoringController;\n"]}