{"version":3,"sources":["node.spec.es6"],"names":["common","describe","projectId","browser","params","authoringProjectId","nodeId","beforeAll","page","isAngularSite","get","$","sendKeys","login","user","password","click","beforeEach","refresh","wait","projectTitleSpan","isPresent","it","expect","getText","toEqual","shouldBeDisplayed","backToProjectButton","addComponentButton","importComponentButton","moveComponentButton","copyComponentButton","deleteComponentButton","editStepRubricButton","stepAdvancedButton","stepUndoButton","stepPreviewButton","stepPreviewWithouConstraintsButton","ms","Date","getTime","setStepTitle","stepSelectMenu","all","by","css","first","toContain","clickAddComponentButton","clickComponentType","clickInsertButton","element","cssContainingText","clickNextNodeButton","getCurrentUrl","clickPreviousNodeButton","clickTheComponentCheckbox","clickDeleteComponentButton","EC","protractor","ExpectedConditions","alertIsPresent","switchTo","alert","accept"],"mappings":"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","file":"node.spec.js","sourcesContent":["import * as common from '../../common.js';\nimport StepPage from './node.page.js';\n\n/**\n * E2E tests for the step view in the Authoring Tool\n */\ndescribe('WISE Authoring Tool Step View', () => {\n\n  const projectId = browser.params.authoringProjectId;\n  const nodeId = 'node2';\n\n  beforeAll(() => {\n    const page = new StepPage();\n    const params = browser.params;\n    isAngularSite(false);\n    browser.get('http://localhost:8080/wise/login');\n    $('#username').sendKeys(params.login.user);\n    $('#password').sendKeys(params.login.password);\n    $('#signInButton').click();\n  });\n\n  beforeEach(() => {\n    const page = new StepPage();\n    isAngularSite(true);\n    browser.get('http://localhost:8080/wise/author#/project/' + projectId + '/node/' + nodeId);\n    browser.refresh();  // needed for this issue https://github.com/angular/protractor/issues/2643\n    browser.wait(function() {\n      return page.projectTitleSpan.isPresent()\n    }, 5000, 'Authoring Tool didn\\'t load properly');\n  });\n\n  it('should have elements on the page in the step view', () => {\n    const page = new StepPage();\n    expect(page.projectTitleSpan.getText()).toEqual('My Science Project');\n    common.shouldBeDisplayed(page.backToProjectButton);\n    common.shouldBeDisplayed(page.addComponentButton);\n    common.shouldBeDisplayed(page.importComponentButton);\n    common.shouldBeDisplayed(page.moveComponentButton);\n    common.shouldBeDisplayed(page.copyComponentButton);\n    common.shouldBeDisplayed(page.deleteComponentButton);\n    common.shouldBeDisplayed(page.editStepRubricButton);\n    common.shouldBeDisplayed(page.stepAdvancedButton);\n    common.shouldBeDisplayed(page.stepUndoButton);\n    common.shouldBeDisplayed(page.stepPreviewButton);\n    common.shouldBeDisplayed(page.stepPreviewWithouConstraintsButton);\n  });\n\n  it('should allow the author to change the step title', () => {\n    const page = new StepPage();\n    const ms = new Date().getTime();\n    page.setStepTitle('Step ' + ms);\n    expect(page.stepSelectMenu.all(by.css('md-select-value span')).first().getText()).toContain(': Step ' + ms);\n  });\n\n  it('should add a component', () => {\n    const page = new StepPage();\n    page.clickAddComponentButton();\n    page.clickComponentType('Open Response');\n    page.clickInsertButton(0);\n    common.shouldBeDisplayed(element(by.cssContainingText('span', '1. Open Response')));\n  });\n\n  it('should add two components', () => {\n    const page = new StepPage();\n    page.clickAddComponentButton();\n    page.clickComponentType('Open Response');\n    page.clickInsertButton(0);\n    page.clickAddComponentButton();\n    page.clickComponentType('Multiple Choice');\n    page.clickInsertButton(1);\n    common.shouldBeDisplayed(element(by.cssContainingText('span', '2. Multiple Choice')));\n  });\n\n  it('should allow navigating to the next step with the next arrow', () => {\n    const page = new StepPage();\n    page.clickNextNodeButton();\n    expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/author#/project/' + projectId + '/node/node3');\n  });\n\n  it('should allow navigating to the previous step with the previous arrow', () => {\n    const page = new StepPage();\n    page.clickPreviousNodeButton();\n    expect(browser.getCurrentUrl()).toEqual('http://localhost:8080/wise/author#/project/' + projectId + '/node/node1');\n  });\n\n  it('should delete a component', () => {\n    const page = new StepPage();\n    page.clickAddComponentButton();\n    page.clickComponentType('Open Response');\n    page.clickInsertButton(0);\n    page.clickAddComponentButton();\n    page.clickComponentType('Multiple Choice');\n    page.clickInsertButton(1);\n    common.shouldBeDisplayed(element(by.cssContainingText('span', '1. Open Response')));\n    common.shouldBeDisplayed(element(by.cssContainingText('span', '2. Multiple Choice')));\n    page.clickTheComponentCheckbox(2);\n    page.clickDeleteComponentButton();\n\n    /*\n     * A confirmation popup will show up asking if the author is sure they\n     * want to delete the component. We will click 'OK'.\n     */\n    const EC = protractor.ExpectedConditions;\n    browser.wait(EC.alertIsPresent(), 3000);\n    browser.switchTo().alert().accept();\n\n    common.shouldBeDisplayed(element(by.cssContainingText('span', '1. Open Response')));\n  });\n});\n"]}