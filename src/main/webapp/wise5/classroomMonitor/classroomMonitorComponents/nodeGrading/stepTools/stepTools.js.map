{"version":3,"sources":["stepTools.es6"],"names":["StepToolsController","$scope","NodeService","ProjectService","TeacherDataService","$mdSidenav","idToOrder","updateModel","$on","event","args","endCurrentNodeAndSetCurrentNodeByNodeId","toNodeId","nodeId","getCurrentNodeId","isGroupNode","prevId","getPrevNodeIdWithWork","nextId","getNextNodeIdWithWork","then","nextNodeId","showPosition","getNodePositionById","getNodeTitleByNodeId","nodeHasWork","goToPrevNodeWithWork","goToNextNodeWithWork","$inject","StepTools","bindings","template","controller"],"mappings":"AAAA;;;;;;;;;;IAEMA,mB;AACF,iCAAYC,MAAZ,EACYC,WADZ,EAEYC,cAFZ,EAGYC,kBAHZ,EAIYC,UAJZ,EAIwB;AAAA;;AAAA;;AAEpB,aAAKJ,MAAL,GAAcA,MAAd;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;;AAEA;AACA,aAAKE,SAAL,GAAiB,KAAKH,cAAL,CAAoBG,SAArC;;AAEA,aAAKC,WAAL;;AAEA,aAAKN,MAAL,CAAYO,GAAZ,CAAgB,oBAAhB,EAAsC,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACnD,kBAAKH,WAAL;AACH,SAFD;AAGH;;;;0CAEiB;AACd;AACA,iBAAKH,kBAAL,CAAwBO,uCAAxB,CAAgE,KAAKC,QAArE;AACH;;;sCAEa;AAAA;;AACV,gBAAIC,SAAS,KAAKT,kBAAL,CAAwBU,gBAAxB,EAAb;AACA,gBAAI,CAAC,KAAKX,cAAL,CAAoBY,WAApB,CAAgCF,MAAhC,CAAL,EAA8C;AAC1C,qBAAKA,MAAL,GAAcA,MAAd;AACA,qBAAKG,MAAL,GAAc,KAAKd,WAAL,CAAiBe,qBAAjB,EAAd;AACA,qBAAKC,MAAL,GAAc,IAAd;AACA,qBAAKhB,WAAL,CAAiBiB,qBAAjB,GAAyCC,IAAzC,CAA8C,UAACC,UAAD,EAAgB;AAC5D,2BAAKH,MAAL,GAAcG,UAAd;AACD,iBAFD;;AAIA;AACA,qBAAKT,QAAL,GAAgB,KAAKC,MAArB;AACH;AACJ;;;0CAEiB;AACd,mBAAO,CAAC,KAAKS,YAAL,IAAqB,KAAKC,mBAAL,CAAyB,KAAKV,MAA9B,CAArB,GAA6D,KAAKU,mBAAL,CAAyB,KAAKV,MAA9B,IAAwC,IAArG,GAA4G,EAA7G,IAAmH,KAAKW,oBAAL,CAA0B,KAAKX,MAA/B,CAA1H;AACH;;;6CAEoBA,M,EAAQ;AACzB,mBAAO,KAAKV,cAAL,CAAoBqB,oBAApB,CAAyCX,MAAzC,CAAP;AACH;;;4CAEmBA,M,EAAQ;AACxB,mBAAO,KAAKV,cAAL,CAAoBoB,mBAApB,CAAwCV,MAAxC,CAAP;AACH;;;oCAEWA,M,EAAQ;AAChB,mBAAO,KAAKV,cAAL,CAAoBY,WAApB,CAAgCF,MAAhC,CAAP;AACH;;;iCAEQA,M,EAAQ;AACb,mBAAO,KAAKE,WAAL,CAAiBF,MAAjB,KAA4B,KAAKV,cAAL,CAAoBsB,WAApB,CAAgCZ,MAAhC,CAAnC;AACH;;;uCAEc;AACX,iBAAKX,WAAL,CAAiBwB,oBAAjB;AACH;;;uCAEc;AACX,iBAAKxB,WAAL,CAAiByB,oBAAjB;AACH;;;;;;AAGL3B,oBAAoB4B,OAApB,GAA8B,CAC1B,QAD0B,EAE1B,aAF0B,EAG1B,gBAH0B,EAI1B,oBAJ0B,EAK1B,YAL0B,CAA9B;;AAQA,IAAMC,YAAY;AACdC,cAAU;AACNR,sBAAc;AADR,KADI;AAIdS,iwEAJc;AAqCdC,gBAAYhC;AArCE,CAAlB;;kBAwCe6B,S","file":"stepTools.js","sourcesContent":["\"use strict\";\n\nclass StepToolsController {\n    constructor($scope,\n                NodeService,\n                ProjectService,\n                TeacherDataService,\n                $mdSidenav) {\n\n        this.$scope = $scope;\n        this.NodeService = NodeService;\n        this.ProjectService = ProjectService;\n        this.TeacherDataService = TeacherDataService;\n\n        // service objects and utility functions\n        this.idToOrder = this.ProjectService.idToOrder;\n\n        this.updateModel();\n\n        this.$scope.$on('currentNodeChanged', (event, args) => {\n            this.updateModel();\n        });\n    }\n\n    toNodeIdChanged() {\n        // selected node id has changed, so open new node\n        this.TeacherDataService.endCurrentNodeAndSetCurrentNodeByNodeId(this.toNodeId);\n    }\n\n    updateModel() {\n        var nodeId = this.TeacherDataService.getCurrentNodeId();\n        if (!this.ProjectService.isGroupNode(nodeId)) {\n            this.nodeId = nodeId;\n            this.prevId = this.NodeService.getPrevNodeIdWithWork();\n            this.nextId = null;\n            this.NodeService.getNextNodeIdWithWork().then((nextNodeId) => {\n              this.nextId = nextNodeId;\n            });\n\n            // model variable for selected node id\n            this.toNodeId = this.nodeId;\n        }\n    }\n\n    getSelectedText() {\n        return (this.showPosition && this.getNodePositionById(this.nodeId) ? this.getNodePositionById(this.nodeId) + ': ' : '') + this.getNodeTitleByNodeId(this.nodeId);\n    }\n\n    getNodeTitleByNodeId(nodeId) {\n        return this.ProjectService.getNodeTitleByNodeId(nodeId);\n    }\n\n    getNodePositionById(nodeId) {\n        return this.ProjectService.getNodePositionById(nodeId);\n    }\n\n    isGroupNode(nodeId) {\n        return this.ProjectService.isGroupNode(nodeId);\n    }\n\n    showNode(nodeId) {\n        return this.isGroupNode(nodeId) || this.ProjectService.nodeHasWork(nodeId);\n    }\n\n    goToPrevNode() {\n        this.NodeService.goToPrevNodeWithWork();\n    }\n\n    goToNextNode() {\n        this.NodeService.goToNextNodeWithWork();\n    }\n}\n\nStepToolsController.$inject = [\n    '$scope',\n    'NodeService',\n    'ProjectService',\n    'TeacherDataService',\n    '$mdSidenav'\n];\n\nconst StepTools = {\n    bindings: {\n        showPosition: '<'\n    },\n    template:\n        `<div layout=\"row\" layout-align=\"center center\">\n            <md-button aria-label=\"{{ 'previousStep' | translate }}\"\n                       class=\"md-icon-button toolbar__nav\"\n                       ng-disabled=\"!$ctrl.prevId\" ng-click=\"$ctrl.goToPrevNode()\">\n                <md-icon> chevron_left </md-icon>\n                <md-tooltip md-direction=\"bottom\">{{ 'previousStep' | translate }}</md-tooltip>\n            </md-button>\n            <node-icon node-id=\"$ctrl.nodeId\" size=\"18\"></node-icon>&nbsp;\n            <md-select id=\"stepSelectMenu\" md-theme=\"default\"\n                       class=\"md-button md-no-underline toolbar__select toolbar__select--fixedwidth\"\n                       md-container-class=\"stepSelectMenuContainer\"\n                       aria-label=\"{{ 'selectAStep' | translate }}\"\n                       ng-model=\"$ctrl.toNodeId\"\n                       ng-change=\"$ctrl.toNodeIdChanged()\"\n                       md-selected-text=\"$ctrl.getSelectedText()\">\n                <md-option ng-repeat=\"item in $ctrl.idToOrder | toArray | orderBy : 'order'\"\n                           ng-if=\"item.order !== 0 && $ctrl.showNode(item.$key)\"\n                           value=\"{{ item.$key }}\"\n                           ng-class=\"{'node-select-option--group': $ctrl.isGroupNode(item.$key), 'node-select-option--node': !$ctrl.isGroupNode(item.$key)}\">\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <node-icon node-id=\"item.$key\" size=\"18\" custom-class=\"'node-select__icon'\"></node-icon>\n                        <span class=\"node-select__text\">{{ $ctrl.showPosition && $ctrl.getNodePositionById(item.$key) ? $ctrl.getNodePositionById(item.$key) + ': ' : '' }}{{ $ctrl.getNodeTitleByNodeId(item.$key) }}</span>\n                    </div>\n                </md-option>\n            </md-select>\n            <md-button aria-label=\"{{ 'nextStep' | translate }}\"\n                       class=\"md-icon-button toolbar__nav\"\n                       ng-disabled=\"!$ctrl.nextId\" ng-click=\"$ctrl.goToNextNode()\">\n                <md-icon> chevron_right </md-icon>\n                <md-tooltip md-direction=\"bottom\">{{ 'nextStep' | translate }}</md-tooltip>\n            </md-button>\n        </div>`,\n    controller: StepToolsController\n};\n\nexport default StepTools;\n"]}